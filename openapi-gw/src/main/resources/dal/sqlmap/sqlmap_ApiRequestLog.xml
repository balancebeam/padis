<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="ApiRequestLog">

	<typeAlias alias="apiRequestLogDO"
		type="com.zhongan.openapi.core.dal.dataobject.ApiRequestLogDO" />
	<typeAlias alias="apiRequestLogQuery"
		type="com.zhongan.openapi.core.dal.query.ApiRequestLogQuery" />

	<resultMap id="apiRequestLogDOResultMap" class="apiRequestLogDO">
		<result property="id" column="id" />
		<result property="appKey" column="app_key" />
		<result property="channelId" column="channel_id" />
		<result property="productId" column="product_id" />
		<result property="timestamp" column="timestamp" />
		<result property="format" column="format" />
		<result property="sign" column="sign" />
		<result property="signType" column="sign_type" />
		<result property="version" column="version" />
		<result property="serviceName" column="service_name" />
		<result property="charset" column="charset" />
		<result property="requestInfo" column="request_info" />
		<result property="responseInfo" column="response_info" />
		<result property="requestTime" column="request_time" />
		<result property="responseTime" column="response_time" />
		<result property="isDel" column="is_deleted" />
		<result property="gmtCreated" column="gmt_created" />
		<result property="gmtModified" column="gmt_modified" />
		<result property="isSuccess" column="is_success" />
		<result property="errorCode" column="error_code" />
		<result property="requestClear" column="request_clear" />
		<result property="responseClear" column="response_clear" />
	</resultMap>

	<sql id="apiRequestLog_query_columns">
		a1.id, a1.app_key, a1.channel_id, a1.product_id, a1.timestamp, a1.format,
		a1.sign, a1.sign_type, a1.version, a1.service_name,
		a1.charset, a1.request_info, a1.response_info, a1.request_time, a1.response_time,
		a1.is_deleted, a1.gmt_created, a1.gmt_modified, a1.is_success, a1.error_code, a1.request_clear, a1.response_clear
	</sql>

	<sql id="queryQueryParams">
		<dynamic prepend="WHERE">
      <![CDATA[  
      is_deleted = 'N'
      ]]>
			<isParameterPresent prepend="AND">
				<isNotNull property="id" prepend="AND">
	        <![CDATA[  
	        id = #id#  
	        ]]>
				</isNotNull>
				<isNotNull property="appKey" prepend="AND">
	        <![CDATA[  
	        app_key = #appKey#  
	        ]]>
				</isNotNull>
				<isNotNull property="appKey" prepend="AND">
	        <![CDATA[  
	        channel_id = #channelId#  
	        ]]>
				</isNotNull>
				<isNotNull property="appKey" prepend="AND">
	        <![CDATA[  
	        product_id = #productId#  
	        ]]>
				</isNotNull>
				<isNotNull property="timestamp" prepend="AND">
	        <![CDATA[  
	        timestamp = #timestamp#  
	        ]]>
				</isNotNull>
				<isNotNull property="format" prepend="AND">
	        <![CDATA[  
	        format = #format#  
	        ]]>
				</isNotNull>
				<isNotNull property="sign" prepend="AND">
	        <![CDATA[  
	        sign = #sign#  
	        ]]>
				</isNotNull>
				<isNotNull property="signType" prepend="AND">
	        <![CDATA[  
	        sign_type = #signType#  
	        ]]>
				</isNotNull>
				<isNotNull property="version" prepend="AND">
	        <![CDATA[  
	        version = #version#  
	        ]]>
				</isNotNull>
				<isNotNull property="serviceName" prepend="AND">
	        <![CDATA[  
	        service_name = #serviceName#  
	        ]]>
				</isNotNull>
				<isNotNull property="charset" prepend="AND">
	        <![CDATA[  
	        charset = #charset#  
	        ]]>
				</isNotNull>
				<isNotNull property="requestInfo" prepend="AND">
	        <![CDATA[  
	        request_info = #requestInfo#  
	        ]]>
				</isNotNull>
				<isNotNull property="responseInfo" prepend="AND">
	        <![CDATA[  
	        response_info = #responseInfo#  
	        ]]>
				</isNotNull>
				<isNotNull property="requestTime" prepend="AND">
	        <![CDATA[  
	        request_time = #requestTime#  
	        ]]>
				</isNotNull>
				<isNotNull property="responseTime" prepend="AND">
	        <![CDATA[  
	        response_time = #responseTime#  
	        ]]>
				</isNotNull>
				<isNotNull property="isSuccess" prepend="AND">
	        <![CDATA[  
	        is_success = #isSuccess#  
	        ]]>
				</isNotNull>
				<isNotNull property="errorCode" prepend="AND">
	        <![CDATA[  
	        error_code = #errorCode#  
	        ]]>
				</isNotNull>
				<isNotNull property="requestClear" prepend="AND">
	        <![CDATA[  
	        request_clear = #requestClear#  
	        ]]>
				</isNotNull>
				<isNotNull property="responseClear" prepend="AND">
	        <![CDATA[  
	        response_clear = #responseClear#  
	        ]]>
				</isNotNull>
			</isParameterPresent>
		</dynamic>
	</sql>

	<insert id="insert" parameterClass="apiRequestLogDO">
		INSERT INTO api_request_log( id, app_key, channel_id, product_id,
		timestamp, format, sign, sign_type, version, service_name,
		charset, request_info, response_info, request_time, response_time, is_deleted,
		gmt_created, gmt_modified, is_success, error_code, request_clear, response_clear
		)
		VALUES ( #id#, #appKey#, #channelId#, #productId#, #timestamp#, #format#,
		#sign#, #signType#, #version#, #serviceName#,
		#charset#, #requestInfo#, #responseInfo#, #requestTime#, #responseTime#, 'N',
		now(), now(), #isSuccess#, #errorCode#, #requestClear#, #responseClear#
		)
		<selectKey keyProperty="id" resultClass="java.lang.Long">
			SELECT LAST_INSERT_ID() AS value
		</selectKey>
	</insert>
	
	<insert id="copyToBak" parameterClass="apiRequestLogDO">
		INSERT INTO api_request_log_bak( id, app_key, channel_id, service_name,
		request_info, response_info, request_clear, response_clear, is_deleted,
		gmt_created, gmt_modified, is_success, error_code
		)
		VALUES ( #id#, #appKey#, #channelId#, #serviceName#,
		#requestInfo#, #responseInfo#, #requestClear#, #responseClear#, #isDel#,
		#gmtCreated#, #gmtModified#, #isSuccess#, #errorCode#
		)	
	</insert>

	<update id="update" parameterClass="apiRequestLogDO">
		UPDATE api_request_log
		<dynamic prepend="SET">
			<isNotNull property="appKey" prepend=",">
        <![CDATA[  
        app_key = #appKey#  
        ]]>
			</isNotNull>
			<isNotNull property="appKey" prepend=",">
        <![CDATA[  
        channel_id = #channelId#  
        ]]>
			</isNotNull>
			<isNotNull property="appKey" prepend=",">
        <![CDATA[  
        product_id = #productId#  
        ]]>
			</isNotNull>
			<isNotNull property="timestamp" prepend=",">
        <![CDATA[  
        timestamp = #timestamp#  
        ]]>
			</isNotNull>
			<isNotNull property="format" prepend=",">
        <![CDATA[  
        format = #format#  
        ]]>
			</isNotNull>
			<isNotNull property="sign" prepend=",">
        <![CDATA[  
        sign = #sign#  
        ]]>
			</isNotNull>
			<isNotNull property="signType" prepend=",">
        <![CDATA[  
        sign_type = #signType#  
        ]]>
			</isNotNull>
			<isNotNull property="version" prepend=",">
        <![CDATA[  
        version = #version#  
        ]]>
			</isNotNull>
			<isNotNull property="serviceName" prepend=",">
        <![CDATA[  
        service_name = #serviceName#  
        ]]>
			</isNotNull>
			<isNotNull property="charset" prepend=",">
        <![CDATA[  
        charset = #charset#  
        ]]>
			</isNotNull>
			<isNotNull property="requestInfo" prepend=",">
        <![CDATA[  
        request_info = #requestInfo#  
        ]]>
			</isNotNull>
			<isNotNull property="responseInfo" prepend=",">
        <![CDATA[  
        response_info = #responseInfo#  
        ]]>
			</isNotNull>
			<isNotNull property="requestTime" prepend=",">
        <![CDATA[  
        request_time = #requestTime#  
        ]]>
			</isNotNull>
			<isNotNull property="responseTime" prepend=",">
        <![CDATA[  
        response_time = #responseTime#  
        ]]>
			</isNotNull>
			<isNotNull property="gmtModified" prepend=",">
        <![CDATA[  
        gmt_modified = now() 
        ]]>
			</isNotNull>
			<isNotNull property="isSuccess" prepend=",">
        <![CDATA[  
        is_success = #isSuccess#  
        ]]>
			</isNotNull>
			<isNotNull property="errorCode" prepend=",">
        <![CDATA[  
        error_code = #errorCode#  
        ]]>
			</isNotNull>
			<isNotNull property="requestClear" prepend=",">
        <![CDATA[  
        request_clear = #requestClear#  
        ]]>
			</isNotNull>
			<isNotNull property="responseClear" prepend=",">
        <![CDATA[  
        response_clear = #responseClear#  
        ]]>
			</isNotNull>
		</dynamic>
		WHERE id = #id#
	</update>

	<select id="findByPrimaryKey" parameterClass="java.lang.Long"
		resultMap="apiRequestLogDOResultMap">
		SELECT
		<include refid="apiRequestLog_query_columns" />
    <![CDATA[  
     FROM api_request_log a1 WHERE id = #id#
    ]]>
	</select>

	<delete id="deleteByPrimaryKey" parameterClass="java.lang.Long">
		UPDATE api_request_log SET is_deleted = 'Y', gmt_modified = now() WHERE id
		= #id#
	</delete>
	
	<delete id="realDelByPk" parameterClass="java.lang.Long">
		DELETE FROM api_request_log WHERE id = #id#
	</delete>

	<select id="countByDOExample" parameterClass="apiRequestLogDO"
		resultClass="java.lang.Integer">
		SELECT COUNT(id) AS num FROM api_request_log
		<include refid="queryQueryParams" />
	</select>

	<select id="findListByDO" resultMap="apiRequestLogDOResultMap"
		parameterClass="apiRequestLogDO">
		SELECT
		<include refid="apiRequestLog_query_columns" />
		FROM api_request_log a1
		<include refid="queryQueryParams" />
	</select>

	<select id="countByQueryExample" parameterClass="apiRequestLogQuery"
		resultClass="java.lang.Integer">
		SELECT COUNT(id) AS num FROM api_request_log
		<include refid="queryQueryParams" />
	</select>

	<select id="findListByQuery" resultMap="apiRequestLogDOResultMap"
		parameterClass="apiRequestLogQuery">
		SELECT
		<include refid="apiRequestLog_query_columns" />
		FROM api_request_log a1
		<include refid="queryQueryParams" />
	</select>
	
	<select id="countErrorByServiceName" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap">
		SELECT service_name, is_success ,error_code, COUNT(*) as num FROM api_request_log
		WHERE gmt_created BETWEEN #startTime# AND #endTime#
		GROUP BY service_name, is_success, error_code ORDER BY service_name
	</select>	
	
	<select id="queryOverrunTime" parameterClass="java.util.HashMap" resultMap="apiRequestLogDOResultMap">
		SELECT
		<include refid="apiRequestLog_query_columns" />
		FROM api_request_log a1
		<![CDATA[  
		WHERE gmt_created <= #gmtCreated# limit #limit#
		]]>
	</select>
	
	<select id="countOverrunTime" parameterClass="java.util.Date" resultClass="java.lang.Integer">
		<![CDATA[ 
		SELECT count(*) FROM api_request_log a1
		WHERE gmt_created <= #gmtCreated# 
		]]>
	</select>
</sqlMap>